# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Setup Julia environment
        # You may pin to the exact commit or the version.
        # uses: julia-actions/setup-julia@f40c4b69330df1d22e7590c12e76dc2f9c66e0bc
        uses: julia-actions/setup-julia@v1.9.2
        #with:
          # The Julia version to download (if necessary) and use. Example: 1.0.4
          #version: # optional, default is 1
          # Include prereleases when matching the Julia version to available versions.
          #include-all-prereleases: # optional, default is false
          # Architecture of the Julia binaries. Defaults to the architecture of the runner executing the job.
          #arch: # optional, default is ${{ runner.arch }}
          # Display InteractiveUtils.versioninfo() after installing
          #show-versioninfo: # optional, default is false
      
